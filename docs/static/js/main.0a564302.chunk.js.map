{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","name","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGif","GifExpert","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"yMAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAazC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,KAAK,aACLC,MAAOV,EACPW,SAjBmB,SAACR,GACxBF,EAAcE,EAAES,OAAOF,a,QCKZG,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,sBAAKC,UAAU,2DAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC9BC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVf,kBAYdY,GAZc,4CAAH,sDCuBLM,EAnBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDP,SAACA,GAAc,IAAD,EACbrB,mBAAS,CAAE2B,KAAM,GAAIQ,SAAS,IADjB,mBAChCC,EADgC,KACzBC,EADyB,KAKvC,OAHAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEV,KAAMa,EAAML,SAAS,SAChE,CAACd,IACGe,EDHmBK,CAAYpB,GAA9BM,EADwB,EACxBA,KAAMQ,EADkB,EAClBA,QAEd,OACE,qCACE,6BAAKd,IACJc,EACC,WAEA,qBAAKlB,UAAU,YAAf,SACGU,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOnBW,EAlBG,WAAO,IAAD,EACc1C,mBAAS,CAAC,OADxB,mBACf2C,EADe,KACH5C,EADG,KAGtB,OACE,gCACE,wCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG4C,EAAWd,KAAI,SAACe,GAAD,OACd,cAAC,EAAD,CAASvB,SAAUuB,GAAUA,Y,MCVvCC,IAASC,OAAO,cAAC,EAAD,IAAeC,SAASC,eAAe,W","file":"static/js/main.0a564302.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputValue = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"inputvalue\"\r\n        value={inputValue}\r\n        onChange={handleInputValue}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=ely4Y3kOWIzQ9rsCBljQdYQXzzcvCaQN`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url,\r\n  }));\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport { useFetchGif } from \"../hooks/useFetchGif\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGif(category);\r\n  // const { data:images } = useFetchGif(category); para renombrar a iamges\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading ? (\r\n        \"cargando\"\r\n      ) : (\r\n        <div className=\"card-grid\">\r\n          {data.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = (category) => {\r\n  const [state, setstate] = useState({ data: [], loading: true });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => setstate({ data: imgs, loading: false }));\r\n  }, [category]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpert = () => {\r\n  const [categories, setCategories] = useState([\"KK\"]);\r\n\r\n  return (\r\n    <div>\r\n      <h2> Giphy</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((cat) => (\r\n          <GifGrid category={cat} key={cat} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpert;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpert from \"./GifExpert\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpert />, document.getElementById(\"root\"));\n"],"sourceRoot":""}